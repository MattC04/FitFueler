{"version":3,"file":"base.mjs","sources":["../../../../../../../src/providers/cognito/utils/clients/CognitoIdentityProvider/base.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { getDnsSuffix, getRetryDecider, jitteredBackoff, parseJsonError, unauthenticatedHandler, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl, getAmplifyUserAgent, } from '@aws-amplify/core/internals/utils';\nimport { composeTransferHandler } from '@aws-amplify/core/internals/aws-client-utils/composers';\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst SERVICE_NAME = 'cognito-idp';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region.\n */\nconst endpointResolver = ({ region }) => {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const customURL = authConfig?.userPoolEndpoint;\n    const defaultURL = new AmplifyUrl(`https://${SERVICE_NAME}.${region}.${getDnsSuffix(region)}`);\n    return {\n        url: customURL ? new AmplifyUrl(customURL) : defaultURL,\n    };\n};\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nconst disableCacheMiddlewareFactory = () => (next, _) => async function disableCacheMiddleware(request) {\n    request.headers['cache-control'] = 'no-store';\n    return next(request);\n};\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nexport const cognitoUserPoolTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddlewareFactory]);\n/**\n * @internal\n */\nexport const defaultConfig = {\n    service: SERVICE_NAME,\n    endpointResolver,\n    retryDecider: getRetryDecider(parseJsonError),\n    computeDelay: jitteredBackoff,\n    userAgentValue: getAmplifyUserAgent(),\n    cache: 'no-store',\n};\n/**\n * @internal\n */\nexport const getSharedHeaders = (operation) => ({\n    'content-type': 'application/x-amz-json-1.1',\n    'x-amz-target': `AWSCognitoIdentityProviderService.${operation}`,\n});\n/**\n * @internal\n */\nexport const buildHttpRpcRequest = ({ url }, headers, body) => ({\n    headers,\n    url,\n    body,\n    method: 'POST',\n});\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAKA;AACA;AACA;AACA,MAAM,YAAY,GAAG,aAAa,CAAC;AACnC;AACA;AACA;AACA,MAAM,gBAAgB,GAAG,CAAC,EAAE,MAAM,EAAE,KAAK;AACzC,IAAI,MAAM,UAAU,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC;AACzD,IAAI,MAAM,SAAS,GAAG,UAAU,EAAE,gBAAgB,CAAC;AACnD,IAAI,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACnG,IAAI,OAAO;AACX,QAAQ,GAAG,EAAE,SAAS,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,GAAG,UAAU;AAC/D,KAAK,CAAC;AACN,CAAC,CAAC;AACF;AACA;AACA;AACA,MAAM,6BAA6B,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,KAAK,eAAe,sBAAsB,CAAC,OAAO,EAAE;AACxG,IAAI,OAAO,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,UAAU,CAAC;AAClD,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC;AACzB,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,8BAA8B,GAAG,sBAAsB,CAAC,sBAAsB,EAAE,CAAC,6BAA6B,CAAC,EAAE;AAC9H;AACA;AACA;AACY,MAAC,aAAa,GAAG;AAC7B,IAAI,OAAO,EAAE,YAAY;AACzB,IAAI,gBAAgB;AACpB,IAAI,YAAY,EAAE,eAAe,CAAC,cAAc,CAAC;AACjD,IAAI,YAAY,EAAE,eAAe;AACjC,IAAI,cAAc,EAAE,mBAAmB,EAAE;AACzC,IAAI,KAAK,EAAE,UAAU;AACrB,EAAE;AACF;AACA;AACA;AACY,MAAC,gBAAgB,GAAG,CAAC,SAAS,MAAM;AAChD,IAAI,cAAc,EAAE,4BAA4B;AAChD,IAAI,cAAc,EAAE,CAAC,kCAAkC,EAAE,SAAS,CAAC,CAAC;AACpE,CAAC,EAAE;AACH;AACA;AACA;AACY,MAAC,mBAAmB,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,IAAI,MAAM;AAChE,IAAI,OAAO;AACX,IAAI,GAAG;AACP,IAAI,IAAI;AACR,IAAI,MAAM,EAAE,MAAM;AAClB,CAAC;;;;"}