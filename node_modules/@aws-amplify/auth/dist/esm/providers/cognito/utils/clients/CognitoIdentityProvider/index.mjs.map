{"version":3,"file":"index.mjs","sources":["../../../../../../../src/providers/cognito/utils/clients/CognitoIdentityProvider/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { parseJsonBody, parseJsonError, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { assertServiceError } from '../../../../../errors/utils/assertServiceError';\nimport { AuthError } from '../../../../../errors/AuthError';\nimport { buildHttpRpcRequest, cognitoUserPoolTransferHandler, defaultConfig, getSharedHeaders, } from './base';\nconst buildUserPoolSerializer = (operation) => (input, endpoint) => {\n    const headers = getSharedHeaders(operation);\n    const body = JSON.stringify(input);\n    return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst buildUserPoolDeserializer = () => {\n    return async (response) => {\n        if (response.statusCode >= 300) {\n            const error = await parseJsonError(response);\n            assertServiceError(error);\n            throw new AuthError({ name: error.name, message: error.message });\n        }\n        else {\n            const body = await parseJsonBody(response);\n            return body;\n        }\n    };\n};\nconst handleEmptyResponseDeserializer = () => {\n    return async (response) => {\n        if (response.statusCode >= 300) {\n            const error = await parseJsonError(response);\n            assertServiceError(error);\n            throw new AuthError({ name: error.name, message: error.message });\n        }\n        else {\n            return undefined;\n        }\n    };\n};\nexport const initiateAuth = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('InitiateAuth'), buildUserPoolDeserializer(), defaultConfig);\nexport const revokeToken = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('RevokeToken'), buildUserPoolDeserializer(), defaultConfig);\nexport const signUp = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('SignUp'), buildUserPoolDeserializer(), defaultConfig);\nexport const confirmSignUp = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ConfirmSignUp'), buildUserPoolDeserializer(), defaultConfig);\nexport const forgotPassword = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ForgotPassword'), buildUserPoolDeserializer(), defaultConfig);\nexport const confirmForgotPassword = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ConfirmForgotPassword'), buildUserPoolDeserializer(), defaultConfig);\nexport const respondToAuthChallenge = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('RespondToAuthChallenge'), buildUserPoolDeserializer(), defaultConfig);\nexport const resendConfirmationCode = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ResendConfirmationCode'), buildUserPoolDeserializer(), defaultConfig);\nexport const verifySoftwareToken = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('VerifySoftwareToken'), buildUserPoolDeserializer(), defaultConfig);\nexport const associateSoftwareToken = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('AssociateSoftwareToken'), buildUserPoolDeserializer(), defaultConfig);\nexport const setUserMFAPreference = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('SetUserMFAPreference'), buildUserPoolDeserializer(), defaultConfig);\nexport const getUser = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('GetUser'), buildUserPoolDeserializer(), defaultConfig);\nexport const changePassword = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ChangePassword'), buildUserPoolDeserializer(), defaultConfig);\nexport const confirmDevice = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ConfirmDevice'), buildUserPoolDeserializer(), defaultConfig);\nexport const forgetDevice = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ForgetDevice'), handleEmptyResponseDeserializer(), defaultConfig);\nexport const deleteUser = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('DeleteUser'), handleEmptyResponseDeserializer(), defaultConfig);\nexport const getUserAttributeVerificationCode = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('GetUserAttributeVerificationCode'), buildUserPoolDeserializer(), defaultConfig);\nexport const globalSignOut = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('GlobalSignOut'), buildUserPoolDeserializer(), defaultConfig);\nexport const updateUserAttributes = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('UpdateUserAttributes'), buildUserPoolDeserializer(), defaultConfig);\nexport const verifyUserAttribute = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('VerifyUserAttribute'), buildUserPoolDeserializer(), defaultConfig);\nexport const updateDeviceStatus = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('UpdateDeviceStatus'), buildUserPoolDeserializer(), defaultConfig);\nexport const listDevices = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ListDevices'), buildUserPoolDeserializer(), defaultConfig);\nexport const deleteUserAttributes = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('DeleteUserAttributes'), buildUserPoolDeserializer(), defaultConfig);\n"],"names":[],"mappings":"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"}