"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importStar(require("react"));
const assets_1 = require("../../assets");
const theme_1 = require("../../theme");
const IconButton_1 = require("../IconButton");
const TextField_1 = require("../TextField");
const styles_1 = require("./styles");
const ui_1 = require("@aws-amplify/ui");
const { getHidePasswordText, getShowPasswordText } = ui_1.authenticatorTextUtil;
function PasswordField({ disabled, iconAccessibilityLabel, iconStyle, secureTextEntry = true, showPasswordButton = true, style, ...rest }) {
    const theme = (0, theme_1.useTheme)();
    const themedStyle = (0, styles_1.getThemedStyles)(theme);
    const [obscureText, setObscureText] = (0, react_1.useState)(secureTextEntry);
    const handleOnPress = react_1.default.useCallback(() => {
        setObscureText(!obscureText);
    }, [obscureText]);
    const toggleVisibilityAccessibilityLabel = iconAccessibilityLabel ?? obscureText
        ? getShowPasswordText()
        : getHidePasswordText();
    return (<TextField_1.TextField {...rest} disabled={disabled} secureTextEntry={obscureText} style={[themedStyle.container, style]} endAccessory={showPasswordButton ? (<IconButton_1.IconButton accessibilityLabel={toggleVisibilityAccessibilityLabel} disabled={disabled} iconStyle={[themedStyle.icon, iconStyle]} size={16} source={obscureText ? assets_1.icons.visibilityOff : assets_1.icons.visibilityOn} onPress={handleOnPress}/>) : null}/>);
}
exports.default = PasswordField;
