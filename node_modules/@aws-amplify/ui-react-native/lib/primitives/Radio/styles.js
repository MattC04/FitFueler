"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getThemedStyles = void 0;
const react_native_1 = require("react-native");
const getRadioDimensions_1 = require("./getRadioDimensions");
const ROUNDED_BORDER_RADIUS = 999;
const getThemedStyles = (theme) => {
    const { components, tokens: { colors, fontSizes, opacities, borderWidths, space }, } = theme;
    return react_native_1.StyleSheet.create({
        container: {
            alignItems: 'center',
            ...components?.radio?.container,
        },
        disabled: {
            opacity: opacities[60],
            ...components?.radio?.disabled,
        },
        pressed: {
            opacity: opacities[60],
            ...components?.radio?.pressed,
        },
        radioContainer: {
            alignItems: 'center',
            borderColor: colors.border.primary,
            borderRadius: ROUNDED_BORDER_RADIUS,
            borderWidth: borderWidths.medium,
            justifyContent: 'center',
            margin: space.xxs,
            ...components?.radio?.radioContainer,
        },
        radioDot: {
            backgroundColor: colors.primary[80],
            borderRadius: ROUNDED_BORDER_RADIUS,
            ...components?.radio?.radioDot,
        },
        radioContainerLarge: {
            height: fontSizes.xl,
            width: fontSizes.xl,
            ...components?.radio?.radioContainerLarge,
        },
        radioContainerMedium: {
            height: fontSizes.large,
            width: fontSizes.large,
            ...components?.radio?.radioContainerMedium,
        },
        radioContainerSmall: {
            height: fontSizes.medium,
            width: fontSizes.medium,
            ...components?.radio?.radioContainerSmall,
        },
        radioDotLarge: {
            height: fontSizes.xl * getRadioDimensions_1.RADIO_DOT_PROPORTION,
            width: fontSizes.xl * getRadioDimensions_1.RADIO_DOT_PROPORTION,
            ...components?.radio?.radioDotLarge,
        },
        radioDotMedium: {
            height: fontSizes.large * getRadioDimensions_1.RADIO_DOT_PROPORTION,
            width: fontSizes.large * getRadioDimensions_1.RADIO_DOT_PROPORTION,
            ...components?.radio?.radioDotMedium,
        },
        radioDotSmall: {
            height: fontSizes.medium * getRadioDimensions_1.RADIO_DOT_PROPORTION,
            width: fontSizes.medium * getRadioDimensions_1.RADIO_DOT_PROPORTION,
            ...components?.radio?.radioDotSmall,
        },
    });
};
exports.getThemedStyles = getThemedStyles;
