"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("react");
const react_native_1 = require("react-native");
const ui_1 = require("@aws-amplify/ui");
const getDeviceOrientation = () => {
    const { height, width } = react_native_1.Dimensions.get('screen');
    return height >= width ? 'portrait' : 'landscape';
};
function useDeviceOrientation() {
    const [deviceOrientation, setDeviceOrientation] = (0, react_1.useState)(getDeviceOrientation);
    const isLandscapeMode = deviceOrientation === 'landscape';
    const isPortraitMode = deviceOrientation === 'portrait';
    (0, react_1.useEffect)(() => {
        const handler = () => {
            setDeviceOrientation(getDeviceOrientation);
        };
        // The below cast and conditional unsubscribe handling is due to subscription removal variation
        // between `Dimensions.addEventListener` in React Native prior to and after v0.65.
        //
        // Beginning with v0.65, `Dimensions.addEventListener` returns an `EventSubscription` object,
        // which includes a `remove` method for removing the subscription. Prior versions return
        // `undefined`, and subscription removal is handled by `Dimensions.removeEventListener`,
        // which is deprecated in v0.65
        const subscription = react_native_1.Dimensions.addEventListener('change', handler);
        return () => {
            if ((0, ui_1.isFunction)(subscription?.remove)) {
                subscription.remove();
            }
            else {
                react_native_1.Dimensions.removeEventListener('change', handler);
            }
        };
    }, []);
    return { deviceOrientation, isLandscapeMode, isPortraitMode };
}
exports.default = useDeviceOrientation;
