"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importDefault(require("react"));
const react_native_1 = require("react-native");
const assets_1 = require("../../../assets");
const primitives_1 = require("../../../primitives");
const constants_1 = require("../../constants");
function MessageLayout({ orientation, ...props }) {
    const { body, hasButtons, hasPrimaryButton, hasRenderableImage, hasSecondaryButton, header, image, onClose, primaryButton, secondaryButton, styles, testID, } = props;
    const iconButton = (<primitives_1.IconButton color={styles.iconButton.iconColor} hitSlop={constants_1.ICON_BUTTON_HIT_SLOP} onPress={onClose} size={constants_1.ICON_BUTTON_SIZE} source={assets_1.icons.close} style={styles.iconButton.container} testID={constants_1.IN_APP_MESSAGING_TEST_ID.CLOSE_BUTTON}/>);
    return (<react_native_1.View style={styles.container} testID={testID}>
      <react_native_1.View style={styles.contentContainer}>
        {orientation === 'portrait' && iconButton}
        {hasRenderableImage && (<react_native_1.View style={styles.imageContainer}>
            <react_native_1.Image source={{ uri: image?.src }} style={styles.image} testID={constants_1.IN_APP_MESSAGING_TEST_ID.IMAGE}/>
          </react_native_1.View>)}
        <react_native_1.View style={styles.textContainer}>
          {header?.content && (<react_native_1.Text style={styles.header} testID={constants_1.IN_APP_MESSAGING_TEST_ID.HEADER}>
              {header.content}
            </react_native_1.Text>)}
          {body?.content && (<react_native_1.Text style={styles.body} testID={constants_1.IN_APP_MESSAGING_TEST_ID.BODY}>
              {body.content}
            </react_native_1.Text>)}
        </react_native_1.View>
        {orientation === 'landscape' && iconButton}
      </react_native_1.View>
      {hasButtons && (<react_native_1.View style={styles.buttonsContainer}>
          {hasSecondaryButton && (<primitives_1.Button onPress={secondaryButton?.onAction} style={styles.secondaryButton.container} testID={constants_1.IN_APP_MESSAGING_TEST_ID.SECONDARY_BUTTON} textStyle={styles.secondaryButton.text}>
              {secondaryButton?.title}
            </primitives_1.Button>)}
          {hasPrimaryButton && (<primitives_1.Button onPress={primaryButton?.onAction} style={styles.primaryButton.container} testID={constants_1.IN_APP_MESSAGING_TEST_ID.PRIMARY_BUTTON} textStyle={styles.primaryButton.text}>
              {primaryButton?.title}
            </primitives_1.Button>)}
        </react_native_1.View>)}
    </react_native_1.View>);
}
exports.default = MessageLayout;
