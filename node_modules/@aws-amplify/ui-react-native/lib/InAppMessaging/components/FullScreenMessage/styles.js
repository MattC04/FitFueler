"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLandscapeStyles = exports.getPortraitStyles = void 0;
const constants_1 = require("../../constants");
const commonStyles = {
    body: {
        fontSize: constants_1.FONT_SIZE_BASE,
        fontWeight: constants_1.FONT_WEIGHT_BASE,
        lineHeight: constants_1.LINE_HEIGHT_BASE,
    },
    buttonContainer: {
        backgroundColor: constants_1.COLOR_LIGHT_GREY,
        borderRadius: constants_1.BORDER_RADIUS_BASE,
        flex: 1,
        margin: constants_1.SPACING_MEDIUM,
        padding: constants_1.SPACING_LARGE,
    },
    buttonsContainer: {
        flexDirection: 'row',
        justifyContent: 'center',
    },
    buttonText: {
        fontSize: constants_1.FONT_SIZE_BASE,
        fontWeight: constants_1.FONT_WEIGHT_BASE,
        lineHeight: constants_1.LINE_HEIGHT_BASE,
        textAlign: 'center',
    },
    container: {
        flex: 1,
        padding: constants_1.SPACING_EXTRA_LARGE,
    },
    contentContainer: {
        flex: 1,
    },
    header: {
        fontSize: constants_1.FONT_SIZE_LARGE,
        fontWeight: constants_1.FONT_WEIGHT_BOLD,
        lineHeight: constants_1.LINE_HEIGHT_LARGE,
    },
    iconButton: {
        alignSelf: 'flex-start',
        marginBottom: constants_1.SPACING_MEDIUM,
        marginLeft: 'auto',
        marginRight: constants_1.SPACING_MEDIUM,
    },
    imageContainer: {
        alignItems: 'center',
        margin: constants_1.SPACING_LARGE,
    },
    textContainer: {
        paddingHorizontal: constants_1.SPACING_MEDIUM,
    },
    wrapper: {
        backgroundColor: constants_1.COLOR_WHITE,
    },
};
const getPortraitStyles = (imageDimensions) => ({
    ...commonStyles,
    buttonsContainer: {
        ...commonStyles.buttonsContainer,
        marginTop: 'auto',
    },
    image: imageDimensions,
    textContainer: {
        ...commonStyles.textContainer,
        marginVertical: constants_1.SPACING_LARGE,
    },
});
exports.getPortraitStyles = getPortraitStyles;
const getLandscapeStyles = (imageDimensions) => ({
    ...commonStyles,
    contentContainer: {
        ...commonStyles.contentContainer,
        flexDirection: 'row',
    },
    image: { ...imageDimensions },
    imageContainer: {
        ...commonStyles.imageContainer,
        justifyContent: 'center',
    },
    textContainer: {
        ...commonStyles.textContainer,
        flex: 1,
        justifyContent: 'center',
    },
    wrapper: {
        ...commonStyles.wrapper,
        flex: 1,
    },
});
exports.getLandscapeStyles = getLandscapeStyles;
