"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importStar(require("react"));
const ui_1 = require("@aws-amplify/ui");
const common_1 = require("../../common");
const hooks_1 = require("../../hooks");
const COMPONENT_NAME = 'SignIn';
const SignIn = ({ fields, handleBlur, handleChange, handleSubmit, hideSignUp, socialProviders, toFederatedSignIn, toForgotPassword, toSignUp, validationErrors, ...rest }) => {
    const { getSignInTabText, getSignInText, getSignUpTabText, getForgotPasswordText, } = ui_1.authenticatorTextUtil;
    const { disableFormSubmit: disabled, fields: fieldsWithHandlers, fieldValidationErrors, handleFormSubmit, } = (0, hooks_1.useFieldValues)({
        componentName: COMPONENT_NAME,
        fields,
        handleBlur,
        handleChange,
        handleSubmit,
        validationErrors,
    });
    const headerText = getSignInTabText();
    const forgotPasswordText = getForgotPasswordText(true);
    const signInText = getSignInText();
    const signUpText = getSignUpTabText();
    const body = socialProviders ? (<common_1.FederatedProviderButtons route="signIn" socialProviders={socialProviders} toFederatedSignIn={toFederatedSignIn}/>) : null;
    const buttons = (0, react_1.useMemo)(() => {
        const forgotPassword = {
            children: forgotPasswordText,
            onPress: toForgotPassword,
        };
        return {
            primary: { children: signInText, disabled, onPress: handleFormSubmit },
            links: hideSignUp
                ? [forgotPassword]
                : [forgotPassword, { children: signUpText, onPress: toSignUp }],
        };
    }, [
        disabled,
        forgotPasswordText,
        handleFormSubmit,
        hideSignUp,
        signInText,
        signUpText,
        toForgotPassword,
        toSignUp,
    ]);
    return (<common_1.DefaultContent {...rest} body={body} buttons={buttons} fields={fieldsWithHandlers} headerText={headerText} validationErrors={fieldValidationErrors}/>);
};
SignIn.Footer = common_1.DefaultFooter;
SignIn.FormFields = common_1.DefaultTextFormFields;
SignIn.Header = common_1.DefaultHeader;
SignIn.displayName = COMPONENT_NAME;
exports.default = SignIn;
