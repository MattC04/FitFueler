"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importStar(require("react"));
const ui_1 = require("@aws-amplify/ui");
const common_1 = require("../../common");
const hooks_1 = require("../../hooks");
const COMPONENT_NAME = 'SignUp';
const { getCreateAccountText, getCreatingAccountText, getSignInTabText, getSignUpTabText, } = ui_1.authenticatorTextUtil;
const SignUp = ({ fields, handleBlur, handleChange, handleSubmit, hasValidationErrors, hideSignIn, isPending, socialProviders, toFederatedSignIn, toSignIn, validationErrors, ...rest }) => {
    const { disableFormSubmit, fields: fieldsWithHandlers, fieldValidationErrors, handleFormSubmit, } = (0, hooks_1.useFieldValues)({
        componentName: COMPONENT_NAME,
        fields,
        handleBlur,
        handleChange,
        handleSubmit,
        validationErrors,
    });
    const disabled = hasValidationErrors || disableFormSubmit;
    const headerText = getSignUpTabText();
    const primaryButtonText = isPending
        ? getCreatingAccountText()
        : getCreateAccountText();
    const secondaryButtonText = getSignInTabText();
    const body = socialProviders ? (<common_1.FederatedProviderButtons route="signUp" socialProviders={socialProviders} toFederatedSignIn={toFederatedSignIn}/>) : null;
    const buttons = (0, react_1.useMemo)(() => ({
        primary: {
            children: primaryButtonText,
            disabled,
            onPress: handleFormSubmit,
        },
        links: hideSignIn
            ? undefined
            : [{ children: secondaryButtonText, onPress: toSignIn }],
    }), [
        disabled,
        handleFormSubmit,
        hideSignIn,
        primaryButtonText,
        secondaryButtonText,
        toSignIn,
    ]);
    return (<common_1.DefaultContent {...rest} body={body} buttons={buttons} fields={fieldsWithHandlers} headerText={headerText} isPending={isPending} validationErrors={fieldValidationErrors}/>);
};
SignUp.Footer = common_1.DefaultFooter;
SignUp.FormFields = common_1.DefaultTextFormFields;
SignUp.Header = common_1.DefaultHeader;
SignUp.displayName = COMPONENT_NAME;
exports.default = SignUp;
